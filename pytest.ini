[tool:pytest]
# Pytest configuration for 3D-DDF project

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts =
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=scripts
    --cov=integrations
    --cov=blender-mcp/src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80

# Markers for different test types
markers =
    blender: marks tests as requiring a live Blender instance with MCP server running (deselect with '-m "not blender"')
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    explosion: marks tests as explosion system tests

# Coverage configuration
[coverage:run]
source =
    scripts/
    integrations/
    blender-mcp/src/

omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */conftest.py
    */migrations/*
    */setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:

