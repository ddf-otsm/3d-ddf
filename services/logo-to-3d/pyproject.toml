[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "logo-to-3d"
version = "0.1.0"
description = "Convert company logos and text into professional 3D models"
authors = [
    {name = "3D Service Team", email = "3dservice@company.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core web framework
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",

    # Image processing
    "pillow==10.1.0",
    "opencv-python==4.8.1.78",
    "numpy==1.26.0",
    "scikit-image==0.22.0",

    # Vector graphics
    "svgwrite==1.4.3",
    "svgpathtools==1.6.2",
    "fonttools==4.43.1",
    "freetype-py==2.4.0",

    # Vectorization
    "pypotrace==0.3.0",

    # Task queue
    "celery[redis]==5.3.4",
    "redis==5.0.1",

    # Database
    "sqlalchemy==2.0.23",
    "alembic==1.12.1",
    "psycopg2-binary==2.9.9",

    # Validation
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",

    # Utilities
    "python-multipart==0.0.6",
    "aiofiles==23.2.1",
    "structlog==23.2.0",
]

[project.optional-dependencies]
dev = [
    # Development tools
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pytest-asyncio==0.21.1",
    "pytest-mock==3.12.0",

    # Code quality
    "black==23.11.0",
    "ruff==0.1.6",
    "mypy==1.7.1",

    # Testing utilities
    "httpx==0.25.2",
    "faker==20.1.0",

    # Development server
    "watchgod==0.8.2",
]

docs = [
    "mkdocs==1.5.3",
    "mkdocs-material==9.4.8",
]

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2",
    "freetype",
    "pypotrace",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]